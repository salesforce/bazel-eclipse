package com.salesforce.bazel.sdk.bep.event;

import java.util.ArrayList;
import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 * Model for the Named Set of Files BEP event.
 * <p>
 * This event is useful when you want to see the resolved file paths used/generated by Bazel in the build.
 */
public class BEPNamedSetEvent extends BEPEvent {
    public static final String NAME = "namedSet";

    private List<BEPFileUri> files = new ArrayList<>();

    public BEPNamedSetEvent(String rawEvent, int index, JSONObject eventObj) {
        super(NAME, rawEvent, index, eventObj);

        JSONObject setDetail = (JSONObject) eventObj.get("namedSetOfFiles");
        if (setDetail != null) {
            parseDetails(setDetail);
        }
    }

    // GETTERS

    public List<BEPFileUri> getFiles() {
        return files;
    }

    // PARSER

    /**
     * "namedSetOfFiles":{ "files":[ { "name":"foo/bar/mylib2.jar",
     * "uri":"file:///private/var/tmp/_bazel_mbenioff/8fc74f66fda297c82a847368ee50d6a4/execroot/myrepo/bazel-out/darwin-fastbuild/bin/foo/bar/mylib.jar",
     * "pathPrefix":[ "bazel-out", "darwin-fastbuild", "bin" ] }, { "name":"foo/bar/mylib2.jar",
     * "uri":"file:///private/var/tmp/_bazel_mbenioff/8fc74f66fda297c82a847368ee50d6a4/execroot/myrepo/bazel-out/darwin-fastbuild/bin/foo/bar/mylib2.jar",
     * "pathPrefix":[ "bazel-out", "darwin-fastbuild", "bin" ] } ] }
     */

    private void parseDetails(JSONObject setDetail) {
        JSONArray filesArray = (JSONArray) setDetail.get("files");
        if (filesArray != null && filesArray.size() > 0) {
            for (int i = 0; i < filesArray.size(); i++) {
                BEPFileUri fileUri = this.decodeURIFromJsonObject(filesArray.get(i));
                if (fileUri != null) {
                    files.add(fileUri);
                }
            }
        }
    }

    // TOSTRING

    @Override
    public String toString() {
        return "BEPNamedSetOfFilesEvent [files=" + files + ", index=" + index + ", eventType=" + eventType
                + ", isProcessed=" + isProcessed + ", isLastMessage=" + isLastMessage + ", isError=" + isError + "]";
    }
}
