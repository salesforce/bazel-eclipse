name: Matrix Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
      - cron: '0 11 * * *'
  repository_dispatch:
  # manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - displayTargetName: ubuntu
            os: ubuntu-latest
          - displayTargetName: macos
            os: macos-latest
          - displayTargetName: windows
            os: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get Time for BUILD_ID
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD_HHmm'

      - name: Get Branch name for BUILD_LABEL
        id: branch_name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/*.target') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install Bazel (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install curl gnupg -y
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
          sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt update
          sudo apt install bazel-4.2.1 -y
          sudo ln -sfn /usr/bin/bazel-4.2.1 /usr/local/bin/bazel
          bazel --version

      - name: Install Bazel (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          export BAZEL_VERSION=4.2.1
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh"
          chmod +x "bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh"
          ./bazel-${BAZEL_VERSION}-installer-darwin-x86_64.sh --user
          export PATH="$PATH:$HOME/bin"
          bazel --version

      - name: Install Bazel (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir c:\bazel
          cd c:\bazel
          curl -fLO "https://github.com/bazelbuild/bazel/releases/download/4.2.1/bazel-4.2.1-windows-x86_64.exe"
          # Windows environment has pre-installed nmp\prefix\bazel*, which is taken as default in BJLS tests, but
          # it doesn't a real Bazel. Therefore, it is required to replace pre-installed file with an actual Bazel
          copy bazel-4.2.1-windows-x86_64.exe C:\npm\prefix\bazel

      - name: Build with tests
        env:
          BUILD_ID: "${{ steps.time.outputs.time }}"
          BUILD_TYPE: "S"
          BUILD_LABEL: "CI ${{ steps.time.outputs.time }} (${{ steps.branch_name.outputs.branch }})"
        run: mvn --batch-mode clean verify
